<launch>
  <!-- World setup -->
  <arg name="plank_of_wood_id" default="2" />
  <arg name="estimation" default="false" />

  <include file="$(find gerard_bauzil)/launch/plank_of_wood.launch">
    <arg name="prefix" value="box" />
    <arg name="id" value="$(arg plank_of_wood_id)" />
  </include>
  <include file="$(find gerard_bauzil)/launch/plank_of_wood.launch">
    <arg name="prefix" value="box_rviz" />
    <arg name="id" value="$(arg plank_of_wood_id)" />
  </include>
  <include file="$(find gerard_bauzil)/launch/rolling_table.launch">
    <arg name="prefix" value="table" />
  </include>
  <node name="to_tf_2" pkg="tf2_ros" type="static_transform_publisher"
    args="0 0 0 0 0 0 1 world odom"
    />
  <node name="box_to_box_rviz" pkg="tf2_ros" type="static_transform_publisher"
    args="0 0 0 0 0 0 1 box/base_link box_rviz/base_link"
    />

  <!-- Initialization of robot root_joint pose as a ROS param
       value = "x y z X Y Z W" where Xi+Yj+Zk+W is a quaternion -->
  <param name="robot_initial_pose"
         value="0.1 -0.65 1.0192720229567027 0 0 0.7071067811865476 0.7071067811865476"/>
  <group ns="vision">
    <node name="publish_constants" pkg="agimus_demos" type="publish_constants.py" required="true"
          args="$(find agimus_demos)/talos/common/camera_info.yaml" />
    <!-- rviz with camera simulation -->
    <node name="rviz" pkg="rviz" type="rviz"
          launch-prefix="$(find agimus)/scripts/ros_synchro --tf-lookup odom,rgbd_rgb_optical_frame -- "
          args="-d $(find agimus_demos)/talos/manipulate_boxes/config.rviz" />
  </group>

  <!-- SoT parameters -->
  <arg name="script_file" doc="Full path to the script which initialize the supervisor"
    default="$(find agimus_demos)/talos/manipulate_boxes/supervisor.py" />

  <include file="$(find sot_pyrene_bringup)/launch/geometric_simu.launch" >
      <!--<arg name="sot-launch-prefix" value="xterm -hold -e /opt/ros/kinetic/lib/gazebo_ros/gdbrun" />-->
  </include>

  <!--This starts the HPP interface in namespace agimus/hpp-->
  <group ns="agimus/hpp">
    <node name="hpp_node" pkg="agimus_hpp" type="hpp_node.py"
      args="hpp-manipulation-server" respawn="true"
      output="screen" />
  </group>

  <!--This starts sot supervisor in namespace agimus/sot-->
  <include file="$(find agimus_sot)/launch/supervisor.launch" >
    <arg name="script_file" value="$(arg script_file)"/>
    <arg name="robot_prefix" value="talos/"/>
    <arg name="simulate_torque_feedback" value="true"/>
  </include>

  <include file="$(find agimus)/launch/path_execution.launch"/>

  <!-- Simulation -->
  <node name="simulation" pkg="agimus_sot" type="simulation.py"/>

  <include if="$(arg estimation)" file="$(find agimus_demos)/launch/talos_manipulate_boxes_estimation.launch"/>
</launch>
